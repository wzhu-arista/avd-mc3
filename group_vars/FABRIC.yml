---
### group_vars/FABRIC.yml
# Ansible connectivity definitions
# eAPI connectivity via HTTPS is specified (as opposed to CLI via SSH)
ansible_connection: httpapi
# Specifies that we are indeed using Arista EOS
ansible_network_os: eos
# This user/password must exist on the switches to enable Ansible access
ansible_user: admin
ansible_password: admin
# User escalation (to enter enable mode)
ansible_become: true
ansible_become_method: enable
# Use SSL (HTTPS)
ansible_httpapi_use_ssl: true
# Do not try to validate certs
ansible_httpapi_validate_certs: false
ansible_httpapi_port: 443
ansible_python_interpreter: $(which python3)

# Common AVD group variables
fabric_name: FABRIC

# Define underlay and overlay routing protocol to be used
underlay_routing_protocol: ebgp
overlay_routing_protocol: ebgp

bgp_update_wait_install: false

evpn_vlan_aware_bundles: true
underlay_multicast: true
evpn_multicast: true

load_interval:
  default: 1
  
# Local users
local_users:
  # Define a new user, which is called "ansible"
  - name: ansible
    privilege: 15
    role: network-admin
    # Password set to "ansible". Same string as the device generates when configuring a username.
    sha512_password: $6$7u4j1rkb3VELgcZE$EJt2Qff8kd/TapRoci0XaIZsL4tFzgq1YZBLD9c6f/knXzvcYY0NcMKndZeCv0T268knGKhOEwZAxqKjlMm920
  - name: admin
    privilege: 15
    role: network-admin
    sha512_password: "$6$7GTxsrRjnwheeKfR$zhJ8qycVjAJz41rf5JRSfWIzp93IL5WL7sMS/Taz1yfShz.MAnoajCf7R2n1/EZW7PN5QA3Huayl0lVQesBYN1"


# BGP peer groups passwords
bgp_peer_groups:
  # all passwords set to "arista"
  evpn_overlay_peers:
    password: Q4fqtbqcZ7oQuKfuWtNGRQ==
  ipv4_underlay_peers:
    password: 7x4B4rnJhZB438m9+BrBfQ==
  mlag_ipv4_underlay_peer:
    password: 4b21pAdCvWeAqpcKDFMdWw==

# P2P interfaces MTU, includes VLANs 4093 and 4094 that are over peer-link
# If you're running vEOS-lab or cEOS, you should use MTU of 1500 instead as shown in the following line
# p2p_uplinks_mtu: 1500
p2p_uplinks_mtu: 1500

# Define default interfaces
default_interfaces:
  - types: [ spine ]
    platforms: [ vEOS-lab ]
    uplink_interfaces: [ Ethernet1-2 ]
    downlink_interfaces: [ Ethernet3-8 ]
  - types: [ l3leaf ]
    platforms: [ vEOS-lab ]
    uplink_interfaces: [ Ethernet1-8 ]
    mlag_interfaces: [ Ethernet3 ]
    downlink_interfaces: [ Ethernet4, Ethernet4 ]
  - types: [ l2leaf ]
    platforms: [ vEOS-lab ]
    uplink_interfaces: [ Ethernet1-2 ]

# L3 Edge port definitions. This can be any port in the entire Fabric, where IP interfaces are defined.
l3_edge:
  # Define a new IP pool that will be used to assign IP addresses to L3 Edge interfaces.
  p2p_links_ip_pools:
    - name: DCI_IP_pool
      ipv4_pool: 172.100.100.0/24
  # Define a new link profile which will match the IP pool, the used ASNs and include the defined interface into underlay routing
  p2p_links_profiles:
    - name: DCI_profile
      ip_pool: DCI_IP_pool
      # as: [65102, 65202]
      include_in_underlay_protocol: true
  # Define each P2P L3 link and link the nodes, the interfaces and the profile used.
  p2p_links:
    - id: 1
      nodes: [dc1-bl1, dc2-bl1]
      interfaces: [Ethernet4, Ethernet4]
      profile: DCI_profile
      as: [65103, 65203]
    - id: 2
      nodes: [dc1-bl2, dc2-bl2]
      interfaces: [Ethernet4, Ethernet4]
      profile: DCI_profile
      as: [65104, 65204]

mgmt_interface: Management0

aaa_authorization:
  exec:
    default: local

# custom_templates:
#   - dcgw.j2   

custom_structured_configuration_router_bfd:
  interval: 2000
  min_rx: 2000
  multiplier: 3
  multihop:
    interval: 2000
    min_rx: 2000
    multiplier: 3